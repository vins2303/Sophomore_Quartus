module Sort2(
    input clk, reset,
    input [7:0] in_data,
    input isData,
    output reg [7:0] out0,out1,out2,out3
)

reg [7:0] buff [0:3];
integer i;
always@(posedge clk)begin
    if(reset == 0)begin
        
    end else begin
        if(isData)begin
            buff[0] <= in_data;
            for(i=1;i<4;i=i+1) buff[i] <= buff[i-1];
            if(in_data < out0) out0 <= in_data;
            if(buff[0] < out1) out0 <= buff[0];
            if(buff[1] < out2) out0 <= buff[1];
            if(buff[2] < out3) out0 <= buff[2];
        end else begin
            for(i=0;i<4;i=i+1)begin
                buff[i] <= 8'hff;
            end
            out0 <= 8'hff;
            out1 <= 8'hff;
            out2 <= 8'hff;
            out3 <= 8'hff;
        end
    end
end


endmodule