// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"

// DATE "11/06/2019 22:33:44"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module N1 (
	clk,
	in,
	out,
	reset,
	state);
input 	clk;
input 	in;
output 	out;
input 	reset;
output 	[2:0] state;

// Design Ports Information
// out	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// state[0]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// state[1]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// state[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \out~output_o ;
wire \state[0]~output_o ;
wire \state[1]~output_o ;
wire \state[2]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \in~input_o ;
wire \reset~input_o ;
wire \state~2_combout ;
wire \state~3_combout ;
wire \state[1]~reg0_q ;
wire \Mux0~0_combout ;
wire \state~4_combout ;
wire \state[2]~reg0_q ;
wire \Mux3~0_combout ;
wire \out~reg0_q ;
wire \state~0_combout ;
wire \state~1_combout ;
wire \state[0]~reg0_q ;


// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \out~output (
	.i(\out~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out~output_o ),
	.obar());
// synopsys translate_off
defparam \out~output .bus_hold = "false";
defparam \out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \state[0]~output (
	.i(\state[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[0]~output .bus_hold = "false";
defparam \state[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N2
cycloneiv_io_obuf \state[1]~output (
	.i(\state[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[1]~output .bus_hold = "false";
defparam \state[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \state[2]~output (
	.i(\state[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[2]~output .bus_hold = "false";
defparam \state[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \in~input (
	.i(in),
	.ibar(gnd),
	.o(\in~input_o ));
// synopsys translate_off
defparam \in~input .bus_hold = "false";
defparam \in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N18
cycloneiv_lcell_comb \state~2 (
// Equation(s):
// \state~2_combout  = (\in~input_o  & (\state[0]~reg0_q  $ (\state[1]~reg0_q  $ (!\state[2]~reg0_q )))) # (!\in~input_o  & ((\state[0]~reg0_q  & ((\state[2]~reg0_q ) # (!\state[1]~reg0_q ))) # (!\state[0]~reg0_q  & (!\state[1]~reg0_q  & \state[2]~reg0_q 
// ))))

	.dataa(\state[0]~reg0_q ),
	.datab(\in~input_o ),
	.datac(\state[1]~reg0_q ),
	.datad(\state[2]~reg0_q ),
	.cin(gnd),
	.combout(\state~2_combout ),
	.cout());
// synopsys translate_off
defparam \state~2 .lut_mask = 16'h6B86;
defparam \state~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N8
cycloneiv_lcell_comb \state~3 (
// Equation(s):
// \state~3_combout  = (!\reset~input_o  & \state~2_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\reset~input_o ),
	.datad(\state~2_combout ),
	.cin(gnd),
	.combout(\state~3_combout ),
	.cout());
// synopsys translate_off
defparam \state~3 .lut_mask = 16'h0F00;
defparam \state~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X13_Y1_N9
dffeas \state[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\state~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[1]~reg0 .is_wysiwyg = "true";
defparam \state[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N12
cycloneiv_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\in~input_o  & (\state[0]~reg0_q  $ (((\state[1]~reg0_q  & \state[2]~reg0_q ))))) # (!\in~input_o  & ((\state[2]~reg0_q ) # ((!\state[0]~reg0_q  & \state[1]~reg0_q ))))

	.dataa(\state[0]~reg0_q ),
	.datab(\in~input_o ),
	.datac(\state[1]~reg0_q ),
	.datad(\state[2]~reg0_q ),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'h7B98;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N2
cycloneiv_lcell_comb \state~4 (
// Equation(s):
// \state~4_combout  = (!\reset~input_o  & \Mux0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\reset~input_o ),
	.datad(\Mux0~0_combout ),
	.cin(gnd),
	.combout(\state~4_combout ),
	.cout());
// synopsys translate_off
defparam \state~4 .lut_mask = 16'h0F00;
defparam \state~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X13_Y1_N3
dffeas \state[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\state~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[2]~reg0 .is_wysiwyg = "true";
defparam \state[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N28
cycloneiv_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (\state[0]~reg0_q  & (((\in~input_o  & !\state[2]~reg0_q )) # (!\state[1]~reg0_q ))) # (!\state[0]~reg0_q  & (\in~input_o  $ (\state[2]~reg0_q  $ (\state[1]~reg0_q ))))

	.dataa(\state[0]~reg0_q ),
	.datab(\in~input_o ),
	.datac(\state[2]~reg0_q ),
	.datad(\state[1]~reg0_q ),
	.cin(gnd),
	.combout(\Mux3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = 16'h49BE;
defparam \Mux3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X13_Y1_N29
dffeas \out~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Mux3~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out~reg0 .is_wysiwyg = "true";
defparam \out~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N24
cycloneiv_lcell_comb \state~0 (
// Equation(s):
// \state~0_combout  = (\in~input_o  & (\state[0]~reg0_q  $ (!\state[2]~reg0_q )))

	.dataa(gnd),
	.datab(\in~input_o ),
	.datac(\state[0]~reg0_q ),
	.datad(\state[2]~reg0_q ),
	.cin(gnd),
	.combout(\state~0_combout ),
	.cout());
// synopsys translate_off
defparam \state~0 .lut_mask = 16'hC00C;
defparam \state~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N26
cycloneiv_lcell_comb \state~1 (
// Equation(s):
// \state~1_combout  = (!\reset~input_o  & ((\state[2]~reg0_q  & ((\state[1]~reg0_q ) # (!\state~0_combout ))) # (!\state[2]~reg0_q  & (\state[1]~reg0_q  $ (\state~0_combout )))))

	.dataa(\state[2]~reg0_q ),
	.datab(\state[1]~reg0_q ),
	.datac(\reset~input_o ),
	.datad(\state~0_combout ),
	.cin(gnd),
	.combout(\state~1_combout ),
	.cout());
// synopsys translate_off
defparam \state~1 .lut_mask = 16'h090E;
defparam \state~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X13_Y1_N27
dffeas \state[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\state~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[0]~reg0 .is_wysiwyg = "true";
defparam \state[0]~reg0 .power_up = "low";
// synopsys translate_on

assign out = \out~output_o ;

assign state[0] = \state[0]~output_o ;

assign state[1] = \state[1]~output_o ;

assign state[2] = \state[2]~output_o ;

endmodule
